//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientWeb.ClientCrudReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientInfo", Namespace="http://schemas.datacontract.org/2004/07/ClientWcfService")]
    [System.SerializableAttribute()]
    public partial class ClientInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaritalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int pkclientIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaritalStatus {
            get {
                return this.MaritalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.MaritalStatusField, value) != true)) {
                    this.MaritalStatusField = value;
                    this.RaisePropertyChanged("MaritalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileNumber {
            get {
                return this.MobileNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNumberField, value) != true)) {
                    this.MobileNumberField = value;
                    this.RaisePropertyChanged("MobileNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nationality {
            get {
                return this.NationalityField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityField, value) != true)) {
                    this.NationalityField = value;
                    this.RaisePropertyChanged("Nationality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int pkclientId {
            get {
                return this.pkclientIdField;
            }
            set {
                if ((this.pkclientIdField.Equals(value) != true)) {
                    this.pkclientIdField = value;
                    this.RaisePropertyChanged("pkclientId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientCrudReference.IClientCrud")]
    public interface IClientCrud {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientCrud/GetAllClients", ReplyAction="http://tempuri.org/IClientCrud/GetAllClientsResponse")]
        ClientWeb.ClientCrudReference.ClientInfo[] GetAllClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientCrud/GetAllClients", ReplyAction="http://tempuri.org/IClientCrud/GetAllClientsResponse")]
        System.Threading.Tasks.Task<ClientWeb.ClientCrudReference.ClientInfo[]> GetAllClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientCrud/AddClient", ReplyAction="http://tempuri.org/IClientCrud/AddClientResponse")]
        int AddClient(string FirstName, string LastName, string Email, string Nationality, string Address, string MobileNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientCrud/AddClient", ReplyAction="http://tempuri.org/IClientCrud/AddClientResponse")]
        System.Threading.Tasks.Task<int> AddClientAsync(string FirstName, string LastName, string Email, string Nationality, string Address, string MobileNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientCrud/GetAllClientById", ReplyAction="http://tempuri.org/IClientCrud/GetAllClientByIdResponse")]
        ClientWeb.ClientCrudReference.ClientInfo GetAllClientById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientCrud/GetAllClientById", ReplyAction="http://tempuri.org/IClientCrud/GetAllClientByIdResponse")]
        System.Threading.Tasks.Task<ClientWeb.ClientCrudReference.ClientInfo> GetAllClientByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientCrud/UpdateClient", ReplyAction="http://tempuri.org/IClientCrud/UpdateClientResponse")]
        int UpdateClient(int Id, string FirstName, string LastName, string Email, string Nationality, string Address, string MobileNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientCrud/UpdateClient", ReplyAction="http://tempuri.org/IClientCrud/UpdateClientResponse")]
        System.Threading.Tasks.Task<int> UpdateClientAsync(int Id, string FirstName, string LastName, string Email, string Nationality, string Address, string MobileNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientCrud/DeleteClientById", ReplyAction="http://tempuri.org/IClientCrud/DeleteClientByIdResponse")]
        int DeleteClientById(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientCrud/DeleteClientById", ReplyAction="http://tempuri.org/IClientCrud/DeleteClientByIdResponse")]
        System.Threading.Tasks.Task<int> DeleteClientByIdAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientCrudChannel : ClientWeb.ClientCrudReference.IClientCrud, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientCrudClient : System.ServiceModel.ClientBase<ClientWeb.ClientCrudReference.IClientCrud>, ClientWeb.ClientCrudReference.IClientCrud {
        
        public ClientCrudClient() {
        }
        
        public ClientCrudClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientCrudClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientCrudClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientCrudClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClientWeb.ClientCrudReference.ClientInfo[] GetAllClients() {
            return base.Channel.GetAllClients();
        }
        
        public System.Threading.Tasks.Task<ClientWeb.ClientCrudReference.ClientInfo[]> GetAllClientsAsync() {
            return base.Channel.GetAllClientsAsync();
        }
        
        public int AddClient(string FirstName, string LastName, string Email, string Nationality, string Address, string MobileNumber) {
            return base.Channel.AddClient(FirstName, LastName, Email, Nationality, Address, MobileNumber);
        }
        
        public System.Threading.Tasks.Task<int> AddClientAsync(string FirstName, string LastName, string Email, string Nationality, string Address, string MobileNumber) {
            return base.Channel.AddClientAsync(FirstName, LastName, Email, Nationality, Address, MobileNumber);
        }
        
        public ClientWeb.ClientCrudReference.ClientInfo GetAllClientById(int id) {
            return base.Channel.GetAllClientById(id);
        }
        
        public System.Threading.Tasks.Task<ClientWeb.ClientCrudReference.ClientInfo> GetAllClientByIdAsync(int id) {
            return base.Channel.GetAllClientByIdAsync(id);
        }
        
        public int UpdateClient(int Id, string FirstName, string LastName, string Email, string Nationality, string Address, string MobileNumber) {
            return base.Channel.UpdateClient(Id, FirstName, LastName, Email, Nationality, Address, MobileNumber);
        }
        
        public System.Threading.Tasks.Task<int> UpdateClientAsync(int Id, string FirstName, string LastName, string Email, string Nationality, string Address, string MobileNumber) {
            return base.Channel.UpdateClientAsync(Id, FirstName, LastName, Email, Nationality, Address, MobileNumber);
        }
        
        public int DeleteClientById(int Id) {
            return base.Channel.DeleteClientById(Id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteClientByIdAsync(int Id) {
            return base.Channel.DeleteClientByIdAsync(Id);
        }
    }
}
